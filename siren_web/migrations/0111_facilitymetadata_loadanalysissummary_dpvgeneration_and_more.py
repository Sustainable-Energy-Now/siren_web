# Generated by Django 5.0.1 on 2025-10-07 01:18

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("siren_web", "0110_gridlines_is_aboveground"),
    ]

    operations = [
        migrations.CreateModel(
            name="FacilityMetadata",
            fields=[
                (
                    "code",
                    models.CharField(
                        max_length=50, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "fuel_type",
                    models.CharField(
                        choices=[
                            ("WIND", "Wind"),
                            ("SOLAR", "Solar"),
                            ("GAS", "Gas"),
                            ("COAL", "Coal"),
                            ("BATTERY", "Battery Storage"),
                            ("HYDRO", "Hydro"),
                            ("BIOMASS", "Biomass"),
                            ("OTHER", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "capacity_mw",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("is_renewable", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name_plural": "Facility Metadata",
                "db_table": "facility_metadata",
            },
        ),
        migrations.CreateModel(
            name="LoadAnalysisSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("period_date", models.DateField(db_index=True, unique=True)),
                (
                    "period_type",
                    models.CharField(
                        choices=[("DAILY", "Daily"), ("MONTHLY", "Monthly")],
                        max_length=20,
                    ),
                ),
                (
                    "operational_demand",
                    models.DecimalField(decimal_places=3, max_digits=12),
                ),
                (
                    "underlying_demand",
                    models.DecimalField(decimal_places=3, max_digits=12),
                ),
                (
                    "dpv_generation",
                    models.DecimalField(decimal_places=3, max_digits=12),
                ),
                (
                    "wind_generation",
                    models.DecimalField(decimal_places=3, max_digits=12),
                ),
                (
                    "solar_generation",
                    models.DecimalField(decimal_places=3, max_digits=12),
                ),
                (
                    "battery_discharge",
                    models.DecimalField(decimal_places=3, max_digits=12),
                ),
                (
                    "battery_charge",
                    models.DecimalField(decimal_places=3, max_digits=12),
                ),
                (
                    "fossil_generation",
                    models.DecimalField(decimal_places=3, max_digits=12),
                ),
                (
                    "re_percentage_operational",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                (
                    "re_percentage_underlying",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                (
                    "dpv_percentage_underlying",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "load_analysis_summary",
                "ordering": ["-period_date"],
            },
        ),
        migrations.CreateModel(
            name="DPVGeneration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("trading_date", models.DateField(db_index=True)),
                ("interval_number", models.IntegerField()),
                ("trading_interval", models.DateTimeField(db_index=True)),
                (
                    "estimated_generation",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Estimated DPV Generation in MW",
                        max_digits=10,
                    ),
                ),
                ("extracted_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "dpv_generation",
                "ordering": ["-trading_date", "interval_number"],
                "indexes": [
                    models.Index(
                        fields=["trading_date", "interval_number"],
                        name="dpv_generat_trading_e4426a_idx",
                    ),
                    models.Index(
                        fields=["trading_interval"],
                        name="dpv_generat_trading_0468a5_idx",
                    ),
                ],
                "unique_together": {("trading_date", "interval_number")},
            },
        ),
        migrations.CreateModel(
            name="FacilityScada",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dispatch_interval", models.DateTimeField(db_index=True)),
                ("facility_code", models.CharField(db_index=True, max_length=50)),
                ("quantity", models.DecimalField(decimal_places=6, max_digits=12)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "facility_scada",
                "ordering": ["-dispatch_interval", "facility_code"],
                "indexes": [
                    models.Index(
                        fields=["dispatch_interval", "facility_code"],
                        name="facility_sc_dispatc_fd0a8d_idx",
                    )
                ],
                "unique_together": {("dispatch_interval", "facility_code")},
            },
        ),
    ]
