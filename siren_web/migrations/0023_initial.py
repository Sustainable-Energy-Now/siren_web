# Generated by Django 5.0.1 on 2024-03-13 08:32

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("siren_web", "0022_remove_analysis_idscenarios_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("group_id", models.IntegerField()),
                ("permission_id", models.IntegerField()),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("content_type_id", models.IntegerField()),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.IntegerField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.IntegerField()),
                ("is_active", models.IntegerField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("user_id", models.IntegerField()),
                ("group_id", models.IntegerField()),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("user_id", models.IntegerField()),
                ("permission_id", models.IntegerField()),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.PositiveSmallIntegerField()),
                ("change_message", models.TextField()),
                ("content_type_id", models.IntegerField(blank=True, null=True)),
                ("user_id", models.IntegerField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="facilities",
            fields=[
                (
                    "idfacilities",
                    models.PositiveIntegerField(
                        db_column="idfacilities", primary_key=True, serialize=False
                    ),
                ),
                (
                    "facility_name",
                    models.CharField(
                        blank=True, db_column="facility_name", max_length=45, null=True
                    ),
                ),
                (
                    "capacity",
                    models.DecimalField(
                        blank=True,
                        db_column="capacity",
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                    ),
                ),
                (
                    "capacityfactor",
                    models.DecimalField(
                        blank=True,
                        db_column="capacityfactor",
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "generation",
                    models.DecimalField(
                        blank=True,
                        db_column="generation",
                        decimal_places=0,
                        max_digits=9,
                        null=True,
                    ),
                ),
                (
                    "transmitted",
                    models.DecimalField(
                        blank=True,
                        db_column="transmitted",
                        decimal_places=0,
                        max_digits=9,
                        null=True,
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "facilities",
            },
        ),
        migrations.CreateModel(
            name="Genetics",
            fields=[
                (
                    "idgenetics",
                    models.PositiveIntegerField(
                        db_column="idGenetics", primary_key=True, serialize=False
                    ),
                ),
                (
                    "parameter",
                    models.CharField(
                        blank=True, db_column="Parameter", max_length=30, null=True
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        db_column="Weight",
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "better",
                    models.DecimalField(
                        blank=True,
                        db_column="Better",
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "worse",
                    models.DecimalField(
                        blank=True,
                        db_column="Worse",
                        decimal_places=2,
                        max_digits=13,
                        null=True,
                    ),
                ),
                (
                    "minvalue",
                    models.DecimalField(
                        blank=True,
                        db_column="MinValue",
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "maxvalue",
                    models.DecimalField(
                        blank=True,
                        db_column="MaxValue",
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "step",
                    models.DecimalField(
                        blank=True,
                        db_column="Step",
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "betterspinner",
                    models.IntegerField(
                        blank=True, db_column="BetterSpinner", null=True
                    ),
                ),
                (
                    "worsespinner",
                    models.IntegerField(
                        blank=True, db_column="WorseSpinner", null=True
                    ),
                ),
            ],
            options={
                "db_table": "Genetics",
                "db_table_comment": "Parameters used for genetic optimisation",
            },
        ),
        migrations.CreateModel(
            name="Optimisation",
            fields=[
                (
                    "idoptimisation",
                    models.PositiveIntegerField(
                        db_column="idOptimisation", primary_key=True, serialize=False
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=45, null=True
                    ),
                ),
                (
                    "approach",
                    models.CharField(
                        blank=True, db_column="Approach", max_length=45, null=True
                    ),
                ),
                (
                    "capacity",
                    models.DecimalField(
                        blank=True,
                        db_column="Capacity",
                        decimal_places=1,
                        max_digits=7,
                        null=True,
                    ),
                ),
                (
                    "capacitymax",
                    models.DecimalField(
                        blank=True,
                        db_column="CapacityMax",
                        decimal_places=1,
                        max_digits=7,
                        null=True,
                    ),
                ),
                (
                    "capacitymin",
                    models.DecimalField(
                        blank=True,
                        db_column="CapacityMin",
                        decimal_places=1,
                        max_digits=7,
                        null=True,
                    ),
                ),
                (
                    "capacitystep",
                    models.DecimalField(
                        blank=True,
                        db_column="CapacityStep",
                        decimal_places=1,
                        max_digits=7,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "Optimisation",
            },
        ),
        migrations.CreateModel(
            name="Scenarios",
            fields=[
                (
                    "idscenarios",
                    models.AutoField(
                        db_column="idScenarios", primary_key=True, serialize=False
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, db_column="Title", max_length=45, null=True
                    ),
                ),
                (
                    "dateexported",
                    models.DateField(blank=True, db_column="DateExported", null=True),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, db_column="Description", max_length=500, null=True
                    ),
                ),
            ],
            options={
                "db_table": "Scenarios",
            },
        ),
        migrations.CreateModel(
            name="Settings",
            fields=[
                (
                    "idsettings",
                    models.PositiveIntegerField(
                        db_column="idSettings", primary_key=True, serialize=False
                    ),
                ),
                ("context", models.CharField(blank=True, max_length=20, null=True)),
                ("parameter", models.CharField(blank=True, max_length=45, null=True)),
                ("value", models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                "db_table": "Settings",
            },
        ),
        migrations.CreateModel(
            name="sirensystem",
            fields=[
                (
                    "name",
                    models.CharField(max_length=30, primary_key=True, serialize=False),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
            ],
            options={
                "db_table": "sirensystem",
            },
        ),
        migrations.CreateModel(
            name="Technologies",
            fields=[
                (
                    "idtechnologies",
                    models.AutoField(
                        db_column="idTechnologies", primary_key=True, serialize=False
                    ),
                ),
                (
                    "technology_name",
                    models.CharField(blank=True, max_length=45, null=True),
                ),
                ("year", models.IntegerField(default=0, null=True)),
                ("image", models.CharField(blank=True, max_length=50, null=True)),
                ("caption", models.CharField(blank=True, max_length=50, null=True)),
                ("category", models.CharField(blank=True, max_length=45, null=True)),
                ("renewable", models.IntegerField(blank=True, null=True)),
                ("dispatchable", models.IntegerField(blank=True, null=True)),
                ("merit_order", models.IntegerField(blank=True, null=True)),
                (
                    "capex",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=9, null=True
                    ),
                ),
                (
                    "fom",
                    models.DecimalField(
                        blank=True,
                        db_column="FOM",
                        decimal_places=2,
                        max_digits=9,
                        null=True,
                    ),
                ),
                (
                    "vom",
                    models.DecimalField(
                        blank=True,
                        db_column="VOM",
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                    ),
                ),
                (
                    "lifetime",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=3, null=True
                    ),
                ),
                (
                    "discount_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        db_collation="utf8mb4_0900_ai_ci",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "capacity",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=9, null=True
                    ),
                ),
                (
                    "mult",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "capacity_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=9, null=True
                    ),
                ),
                (
                    "capacity_min",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=9, null=True
                    ),
                ),
                (
                    "emissions",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=7, null=True
                    ),
                ),
                (
                    "initial",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                (
                    "lcoe",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                (
                    "lcoe_cf",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
            ],
            options={
                "db_table": "Technologies",
            },
        ),
        migrations.CreateModel(
            name="Zones",
            fields=[
                (
                    "idzones",
                    models.PositiveIntegerField(
                        db_column="idZones", primary_key=True, serialize=False
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        db_collation="utf8mb4_0900_ai_ci",
                        max_length=45,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        db_collation="utf8mb4_0900_ai_ci",
                        max_length=500,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "Zones",
            },
        ),
        migrations.CreateModel(
            name="Analysis",
            fields=[
                (
                    "idanalysis",
                    models.AutoField(
                        db_column="idAnalysis", primary_key=True, serialize=False
                    ),
                ),
                ("heading", models.CharField(blank=True, max_length=45, null=True)),
                ("component", models.CharField(blank=True, max_length=45, null=True)),
                (
                    "basis",
                    models.CharField(
                        blank=True, db_column="Basis", max_length=45, null=True
                    ),
                ),
                (
                    "stage",
                    models.CharField(
                        blank=True, db_column="Stage", max_length=45, null=True
                    ),
                ),
                (
                    "quantity",
                    models.FloatField(blank=True, db_column="Quantity", null=True),
                ),
                (
                    "units",
                    models.CharField(
                        blank=True, db_column="Units", max_length=10, null=True
                    ),
                ),
                (
                    "idscenarios",
                    models.ForeignKey(
                        blank=True,
                        db_column="idScenarios",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="siren_web.scenarios",
                    ),
                ),
            ],
            options={
                "db_table": "Analysis",
            },
        ),
        migrations.CreateModel(
            name="ScenariosFacilities",
            fields=[
                (
                    "idscenariosfacilities",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("merit_order", models.IntegerField(blank=True, null=True)),
                (
                    "idfacilities",
                    models.ForeignKey(
                        db_column="idfacilities",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="siren_web.facilities",
                    ),
                ),
                (
                    "idscenarios",
                    models.ForeignKey(
                        db_column="idScenarios",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="siren_web.scenarios",
                    ),
                ),
            ],
            options={
                "db_table": "ScenariosFacilities",
            },
        ),
        migrations.CreateModel(
            name="Storageattributes",
            fields=[
                (
                    "idstorageattributes",
                    models.AutoField(
                        db_column="idStorageAttributes",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("discharge_loss", models.IntegerField(blank=True, null=True)),
                (
                    "discharge_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("parasitic_loss", models.IntegerField(blank=True, null=True)),
                ("rampdown_max", models.IntegerField(blank=True, null=True)),
                ("rampup_max", models.IntegerField(blank=True, null=True)),
                ("recharge_loss", models.IntegerField(blank=True, null=True)),
                (
                    "recharge_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "min_runtime",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "warm_time",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "idtechnologies",
                    models.ForeignKey(
                        blank=True,
                        db_column="idTechnologies",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="siren_web.technologies",
                    ),
                ),
            ],
            options={
                "db_table": "StorageAttributes",
            },
        ),
        migrations.CreateModel(
            name="Generatorattributes",
            fields=[
                (
                    "idgeneratorattributes",
                    models.AutoField(
                        db_column="idGeneratorAttributes",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("year", models.IntegerField()),
                (
                    "fuel",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                (
                    "idtechnologies",
                    models.ForeignKey(
                        db_column="idTechnologies",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="siren_web.technologies",
                    ),
                ),
            ],
            options={
                "db_table": "GeneratorAttributes",
            },
        ),
        migrations.AddField(
            model_name="facilities",
            name="idtechnologies",
            field=models.ForeignKey(
                db_column="idtechnologies",
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="siren_web.technologies",
            ),
        ),
        migrations.CreateModel(
            name="Demand",
            fields=[
                (
                    "iddemand",
                    models.PositiveIntegerField(
                        db_column="idDemand", primary_key=True, serialize=False
                    ),
                ),
                ("hour", models.PositiveIntegerField()),
                ("period", models.DateTimeField(blank=True, null=True)),
                (
                    "load",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=9, null=True
                    ),
                ),
                (
                    "col",
                    models.PositiveIntegerField(blank=True, db_column="Col", null=True),
                ),
                (
                    "idscenarios",
                    models.ForeignKey(
                        db_column="idScenarios",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="siren_web.scenarios",
                    ),
                ),
                (
                    "idtechnologies",
                    models.ForeignKey(
                        db_column="idTechnologies",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="siren_web.technologies",
                    ),
                ),
            ],
            options={
                "db_table": "Demand",
            },
        ),
        migrations.CreateModel(
            name="variations",
            fields=[
                (
                    "idvariations",
                    models.AutoField(
                        db_column="idvariations", primary_key=True, serialize=False
                    ),
                ),
                (
                    "variation_name",
                    models.CharField(blank=True, max_length=45, null=True),
                ),
                (
                    "variation_description",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("dimension", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "startval",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=9, null=True
                    ),
                ),
                (
                    "step",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                ("iterations", models.IntegerField(blank=True, null=True)),
                (
                    "endval",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=9, null=True
                    ),
                ),
                (
                    "idtechnologies",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="siren_web.technologies",
                    ),
                ),
            ],
            options={
                "db_table": "variations",
            },
        ),
        migrations.CreateModel(
            name="supplyfactors",
            fields=[
                (
                    "idsupplyfactors",
                    models.AutoField(
                        db_column="idsupplyfactors", primary_key=True, serialize=False
                    ),
                ),
                ("hour", models.IntegerField(blank=True, null=True)),
                ("supply", models.IntegerField(blank=True, null=True)),
                (
                    "quantum",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=9, null=True
                    ),
                ),
                (
                    "idscenarios",
                    models.ForeignKey(
                        blank=True,
                        db_column="idscenarios",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="siren_web.scenarios",
                    ),
                ),
                (
                    "idtechnologies",
                    models.ForeignKey(
                        blank=True,
                        db_column="idtechnologies",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="siren_web.technologies",
                    ),
                ),
                (
                    "idzones",
                    models.ForeignKey(
                        blank=True,
                        db_column="idzones",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="siren_web.zones",
                    ),
                ),
            ],
            options={
                "db_table": "supplyfactors",
            },
        ),
        migrations.AddField(
            model_name="facilities",
            name="idzones",
            field=models.ForeignKey(
                blank=True,
                db_column="idzones",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="siren_web.zones",
            ),
        ),
    ]
